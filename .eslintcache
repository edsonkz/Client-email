[{"C:\\Users\\Edson\\Documents\\Sistemas Distribuídos\\Http REST\\Client\\client\\src\\index.js":"1","C:\\Users\\Edson\\Documents\\Sistemas Distribuídos\\Http REST\\Client\\client\\src\\App.js":"2","C:\\Users\\Edson\\Documents\\Sistemas Distribuídos\\Http REST\\Client\\client\\src\\api.js":"3","C:\\Users\\Edson\\Documents\\Sistemas Distribuídos\\Http REST\\Client\\client\\src\\routes.js":"4","C:\\Users\\Edson\\Documents\\Sistemas Distribuídos\\Http REST\\Client\\client\\src\\pages\\main\\index.js":"5","C:\\Users\\Edson\\Documents\\Sistemas Distribuídos\\Http REST\\Client\\client\\src\\pages\\user_emails\\index.js":"6","C:\\Users\\Edson\\Documents\\Sistemas Distribuídos\\Http REST\\Client\\client\\src\\pages\\send_email\\index.js":"7","C:\\Users\\Edson\\Documents\\Sistemas Distribuídos\\Http REST\\Client\\client\\src\\pages\\email_info\\index.js":"8"},{"size":200,"mtime":1608749772606,"results":"9","hashOfConfig":"10"},{"size":345,"mtime":1608908662819,"results":"11","hashOfConfig":"10"},{"size":142,"mtime":1609029582979,"results":"12","hashOfConfig":"10"},{"size":679,"mtime":1608915792477,"results":"13","hashOfConfig":"10"},{"size":1590,"mtime":1608925759159,"results":"14","hashOfConfig":"10"},{"size":4947,"mtime":1608921247318,"results":"15","hashOfConfig":"10"},{"size":4264,"mtime":1609016546767,"results":"16","hashOfConfig":"10"},{"size":3523,"mtime":1609016676491,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"emwem9",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Edson\\Documents\\Sistemas Distribuídos\\Http REST\\Client\\client\\src\\index.js",[],["36","37"],"C:\\Users\\Edson\\Documents\\Sistemas Distribuídos\\Http REST\\Client\\client\\src\\App.js",[],"C:\\Users\\Edson\\Documents\\Sistemas Distribuídos\\Http REST\\Client\\client\\src\\api.js",[],"C:\\Users\\Edson\\Documents\\Sistemas Distribuídos\\Http REST\\Client\\client\\src\\routes.js",[],"C:\\Users\\Edson\\Documents\\Sistemas Distribuídos\\Http REST\\Client\\client\\src\\pages\\main\\index.js",[],"C:\\Users\\Edson\\Documents\\Sistemas Distribuídos\\Http REST\\Client\\client\\src\\pages\\user_emails\\index.js",["38"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../../api';\r\nimport './style.css';\r\n\r\nexport default class UserEmails extends Component{\r\n    state={\r\n        emails: [],\r\n        enviados: [],\r\n        recebidos: []\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const { username } = this.props.match.params;\r\n        const response = await api.get('/user=' + username);\r\n        const env = [];\r\n        const rec = [];\r\n\r\n        response.data.map(email => {\r\n            if (email.remetente === username && email.isremetente){\r\n                env.push(email);\r\n\r\n            } else if(email.destinatario === username && !email.isremetente){\r\n                rec.push(email);\r\n            } \r\n        });\r\n\r\n\r\n        this.setState({emails: response.data, enviados: env, recebidos: rec});\r\n    }\r\n\r\n    render(){\r\n        const { enviados, recebidos } = this.state;\r\n        const { username } = this.props.match.params;\r\n\r\n        return(\r\n            <div className=\"emails_list\">\r\n                <h2>Seja bem vindo {username}!</h2>\r\n                <div className=\"emails_sended\">\r\n                    <h3 className='email_type'>Emails enviados</h3>\r\n                    {enviados.length !== 0? (\r\n                        <div className=\"emails\">\r\n                            {enviados.map(email => (\r\n                                <div key={email.id} className=\"email\">\r\n                                <Link to={`/user/${username}/${email.id}`} className=\"link_to\">\r\n                                    <p className=\"r_name\">\r\n                                        <label className=\"email_label\">\r\n                                            <strong>remetente </strong>  \r\n                                        </label>\r\n                                        {email.remetente}\r\n                                    </p>\r\n                                    <p className=\"d_name\">\r\n                                        <label className=\"email_label\">\r\n                                            <strong>destinatário </strong>  \r\n                                        </label>\r\n                                        {email.destinatario}</p>\r\n                                    <p className=\"assunto\">\r\n                                        <label className=\"email_label\">\r\n                                            <strong>assunto </strong>  \r\n                                        </label>\r\n                                        {email.assunto}</p>\r\n                                </Link>    \r\n                            </div>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <p>Nenhum email enviado.</p>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"emails_received\">\r\n                    <h3 className='email_type'>Emails recebidos</h3>\r\n                    {recebidos.length !== 0? (\r\n                        <div className=\"emails\">\r\n                            {recebidos.map(email => (\r\n                                <div key={email.id} className=\"email\">\r\n                                    <Link to={`/user/${username}/${email.id}`} className=\"link_to\">\r\n                                        <p className=\"r_name\">\r\n                                            <label className=\"email_label\">\r\n                                                <strong>remetente </strong>  \r\n                                            </label>\r\n                                            {email.remetente}\r\n                                        </p>\r\n                                        <p className=\"d_name\">\r\n                                            <label className=\"email_label\">\r\n                                                <strong>destinatário </strong>  \r\n                                            </label>\r\n                                            {email.destinatario}</p>\r\n                                        <p className=\"assunto\">\r\n                                            <label className=\"email_label\">\r\n                                                <strong>assunto </strong>  \r\n                                            </label>\r\n                                            {email.assunto}</p>\r\n                                    </Link>    \r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <p>Nenhum email recebido.</p>\r\n                    )}\r\n                </div>\r\n                \r\n                <Link className=\"send_email\" to={\r\n                    `/user/${username}/sendmail`\r\n                }>Enviar Email</Link>\r\n\r\n                <Link className=\"send_email\" to={\r\n                    `/`\r\n                }>Voltar</Link>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n}","C:\\Users\\Edson\\Documents\\Sistemas Distribuídos\\Http REST\\Client\\client\\src\\pages\\send_email\\index.js",[],"C:\\Users\\Edson\\Documents\\Sistemas Distribuídos\\Http REST\\Client\\client\\src\\pages\\email_info\\index.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":19,"column":33,"nodeType":"45","messageId":"46","endLine":19,"endColumn":35},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]